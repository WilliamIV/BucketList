<link href="~/Content/UserListSS.css" rel="stylesheet" />
@model BucketList.Models.UserList


@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <h4>List Item</h4>
    <hr />
        <div class="col-sm-4 col-md-4 col-lg-4">
            <div class="thumbnail">
                <div id="listBG">

                    <div class="caption">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.ListId)

                        <p>
                            <h5>@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })</h5>
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </p>

                        <p>
                            <h5>@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })</h5>
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </p>



                        @*<p>
                        @Html.LabelFor(model => model.ItemCategory, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.ItemCategory, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ItemCategory, "", new { @class = "text-danger" })
                </p>*@

                        <p>
                            <h5>@Html.LabelFor(model => model.Link, htmlAttributes: new { @class = "control-label col-md-2" })</h5>
                            @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
                        </p>

                        <p>
                            <h5>@Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })</h5>
                            @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                        </p>

                        <p>
                            <h5>@Html.LabelFor(model => model.UserIsComplete, htmlAttributes: new { @class = "control-label col-md-2" })</h5></p>
                        <br />
                            <p>@Html.EditorFor(model => model.UserIsComplete)
                            @Html.ValidationMessageFor(model => model.UserIsComplete, "", new { @class = "text-danger" })
                        </p>

                        @*<p>
                    @Html.LabelFor(model => model.ApplicationUserId, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.ApplicationUserId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ApplicationUserId, "", new { @class = "text-danger" })
                </p>*@

                        <p>
                            @Html.LabelFor(model => model.ListCategoryId, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.DropDownList("ListCategoryId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ListCategoryId, "", new { @class = "text-danger" })
                        </p>

                        <p>
                            <input type="submit" value="Save" class="btn btn-default" />
                        </p>
                    </div>
                </div>
            </div>
        </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
